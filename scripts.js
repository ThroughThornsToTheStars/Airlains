let answer = document.querySelector('.answer');
let routesData = null;

document.addEventListener('DOMContentLoaded', () => {
  console.log('DOMContentLoaded ‚Äî —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω');

  const form = document.querySelector('.form');
  const inputs = form.querySelectorAll('input');

  console.log('–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ routes.json...');
  fetch('routes.json')
    .then(res => {
      console.log('–û—Ç–≤–µ—Ç –æ—Ç fetch:', res.status);
      return res.json();
    })
    .then(data => {
      console.log('routes.json —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', data);
      routesData = data;

      inputs.forEach(input => {
        console.log(`–ù–∞–∑–Ω–∞—á–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ input [name="${input.name}"]`);
        input.addEventListener('input', checkInputsFilled);
      });
    })
    .catch(err => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ routes.json:', err);
    });

  function checkInputsFilled() {
    console.log('üåÄ checkInputsFilled –≤—ã–∑–≤–∞–Ω');

    if (!routesData) {
      console.warn('‚ö† routesData –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
      return;
    }

    let path1 = document.getElementsByName("path1")[0].value.trim();
    let path2 = document.getElementsByName("path2")[0].value.trim();
    let date = document.getElementsByName("date")[0].value;
    let length = Number(document.getElementsByName("length")[0].value.replace(',', '.'));
    let width  = Number(document.getElementsByName("width")[0].value.replace(',', '.'));
    let weight = Number(document.getElementsByName("weight")[0].value.replace(',', '.'));
    let heigh  = Number(document.getElementsByName("heigh")[0].value.replace(',', '.'));

    console.log('–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:');
    console.log({ path1, path2, date, length, width, weight, heigh });

    const allFilled = Array.from(inputs).every(input => input.value.trim() !== '');
    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ allFilled:', allFilled);
    if (!allFilled) {
      console.log('‚ùå –ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã ‚Äî –≤—ã—Ö–æ–¥ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏');
      return;
    }

    const selected = routesData.find(route => route.code === path2.toUpperCase());
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞:', selected);

    if (!selected) {
      console.warn('‚ùå –ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      answer.textContent = "";
      answer.style.borderColor = "rgb(241, 241, 241)";
      return;
    }

    if (path1.toUpperCase() === "SVO") {
      console.log('‚úÖ –û—Ç–ø—Ä–∞–≤–Ω–æ–π –ø—É–Ω–∫—Ç ‚Äî SVO');

      let matched = selected.options.find(option =>
        length <= option.lengthi &&
        width <= option.width &&
        heigh <= option.height &&
        weight <= option.weight
      );

      console.log('–ù–∞–π–¥–µ–Ω –ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç?', matched);

      if (matched) {
        console.log('‚úÖ –ì—Ä—É–∑ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º');
        answer.textContent = "–¢–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é";
        answer.style.borderColor = "green";
      } else {
        console.log('‚ùå –ì—Ä—É–∑ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º');
        answer.textContent = "–¢–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é";
        answer.style.borderColor = "red";
      }
    } else {
      console.warn(`‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–Ω–æ–π –ø—É–Ω–∫—Ç –Ω–µ SVO: ${path1}`);
      answer.textContent = "";
      answer.style.borderColor = "rgb(241, 241, 241)";
    }
  }
});

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∫ –±—ã–ª–æ
let copyBtn = document.querySelector(".copyBtn");

copyBtn.addEventListener('click', () => {
  const text = answer.textContent.trim();
  console.log('–ö–Ω–æ–ø–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∂–∞—Ç–∞. –¢–µ–∫—Å—Ç:', text);
  if (!text) {
    console.warn('‚ö†Ô∏è –ù–µ—á–µ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ‚Äî —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è');
    return;
  }
  fallbackCopyTextToClipboard(text);
});

function fallbackCopyTextToClipboard(text) {
  console.log('–ü–æ–ø—ã—Ç–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç:', text);
  const textarea = document.createElement('textarea');
  textarea.value = text;
  textarea.style.position = 'fixed';
  textarea.style.top = '0';
  textarea.style.left = '0';
  textarea.style.opacity = '0';
  document.body.appendChild(textarea);
  textarea.select();

  try {
    const successful = document.execCommand('copy');
    console.log('–ö–æ–º–∞–Ω–¥–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ?', successful);
    if (!successful) throw new Error('Copy command was unsuccessful');
  } catch (err) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç: ', err);
  }

  document.body.removeChild(textarea);
}
